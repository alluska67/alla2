<?php
error_reporting(E_ALL);
header('Content-Type: text/html; charset=utf-8');

/**
 *	Задачник. После каждого $array мы ОБЯЗАНЫ написать прям тут нужный нам код. Прогнать массив $array через foreach и обработать по заданию из $q.
 *	$q - массивы, то есть могут содержать несколько заданий, каждый из которых будет работать с имеющимся массивом
 *	Если у нас в задаче замена, но мы производим замену и выводим: $text = preg_replace('что','на что',$text),
 *	Если у нас в задаче поиск, то производим проверку через if-else и выводим: строку 
 *	echo 'В такой-то строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО или НЕ УСПЕШНО (подставить в if-else)';
 *	и если у нас поиск, то дополнительно вывести весь массив $matches, И нужную найденную строку, если нам надо её получить echo $matches[0][1] <- пример
 *  Задачки подготовил Inpost специально для курсов. Дата: 5 января 2012 года
 *	skype: imbalance_hero , пишите :)
 */

/**
 *	Подсказки:
 *	^ - начало строки, если указали, то проверка идёт от начала!
 *	$ - конец строки
 *	\s - пробел
 *	\t - табуляция
 *	* - {0,}
 *	+ - {1,}
 *	. - любой символ!
 *	Модификаторы:
 *	u - работаем в кодировке UTF-8
 *	i - регистронезависимый текст
 *	U - отмена жадного поиска
 *	Общие данные:
 *	[] - область допустимых символов в КОНКРЕТНОМ символе. [a-z]{3} <- 3 символа любых из a-z, вплоть даже до 3-х повторяющихся
 *	{} - количество символов, если не стоит, значит 1 символ! Если записано одно число, то РОВНОЕ значение, если 2, то min,max
 *	() - логические скобки И/ИЛИ карман, куда попадают данные
 */


$array = array(
    'Ваш логин: 5766767. Добро пожаловать',
    'Ваш логин: Николай. Добро пожаловать',
    'Ваш логин: Анна Семинович. Добро пожаловать',
    'Ваш логин: Борис_Бурда-2. Добро пожаловать',
);

$q = 'Поиском достать логин.
      Особенности: логин стоит после двухиточия, может представлять из себя рус и англ символы, пробелы, тире и подчеркивание.
	  Для для того, чтобы достать чистый логин, воспользуемся карманом (скобками)';

foreach ($array as $k => $v) {
    if(preg_match('#Ваш логин:\s([\wё\s-]+)\.#ui',$v,$matches)) {
        echo 'В этой строке  ' .$v. ' регулярка прошла УСПЕШНО <br>';
        echo $matches[1].'<br>';
    }else{
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка не прошла <br>';
    }
}

$array = array(
    'main',
    'READ',
    'news"&\\/files',
	'../../index',
	'news',
	'kill_crash-and-destroy',
	'loveYou',
    'a?.jpg'
);

$q = 'Проверить допустимые имена файлов
      Важно заметить, что мы в юникс-системе будем использовать как большие, так и маленькие символы.
	  Необходимо недопустить попадания ТОЛЬКО запрещенных файловой системой имён, а так же попытки перейти между каталогами';


foreach ($array as $k => $v) {
    if(preg_match('#^[^*|\\\/?:"<>]+$#ui',$v,$matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
    } else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла'. '<br>';
    }
}

$array = array(
	'file.jpg',
	'zzz.png',
	'afafaf.php',
	'quad.jpg.',
	'quad2.JPG',
	'quad3.jpg.vir',
	'gif.doc',
	'file.virus',
);

$q = 'Загрузка фотографий. Необходимо допустить ТОЛЬКО: jpg,png,gif расширения
	  Важной особенностью будет то, что поиск лучше осуществлять с конца строки $ .
	  Интересный момент, что можно попасться на ошибку Попова :)';


foreach ($array as $k => $v) {
    if(preg_match('#\.(jpg|jpeg|png|gif)$#iu',$v,$matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
    } else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла'. '<br>';
    }
}

    $array = array(
	'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);

$q = array(
	'Одна строка, заданий много:',
	'Получить все слова. Самая простая регулярка, поиск по всей строке, указать надо лишь допустимые символы и количество',
	'Получить все английские слова.',
	'Получить слова, которые стоят после точки. Обращаю внимание, что пробел после точки может БЫТЬ и даже не один, а может и не быть, символ пробела: \s',
	'Необходимо получить 5 символ от начала строки. Начало строки: ^ , и не забудем использовать кармашек, чтобы туда ушел нужный нам символ',
	'Получить все слова, в которых первым символ будет начинаться с большой буквы. Подсказка, необходимо использовать 2 квадратных скобки!',
);

foreach ($array as $k => $v) {
    if (preg_match_all('#\w+#ui', $v, $matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
        echo implode(",",$matches[0]).'<br>';
    } else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла.' . '<br>';
    }
}

foreach ($array as $k => $v) {
    if (preg_match_all('#[a-z]+#ui', $v, $matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
        echo implode(",",$matches[0]).'<br>';
    } else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла.' . '<br>';
    }
}


foreach ($array as $k => $v) {
    if (preg_match_all('#\.\s*([\w]+)#ui', $v, $matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
        echo implode(",",$matches[1]).'<br>';
    } else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла.' . '<br>';
    }
}

foreach ($array as $k => $v) {
    if (preg_match_all('#^.{4}(.)#ui', $v, $matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
        echo $matches[1][0] . '<br>';
    } else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла.' . '<br>';
    }
}

foreach ($array as $k => $v) {
    if (preg_match_all('#[А-ЯЁA-Z][\w]+#u',$v,$matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
        echo implode(",",$matches[0]).'<br>';
    } else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла.' . '<br>';
    }
}


$array = array(
	'10 , 22, 2.1, 2.5, 10.10, 500.1, 77, 10.11.12.13',
);

$q = array(
	'Достать ВСЕ дробные числа. Дробные - это числа, разделенные точкой',
);

foreach ($array as $k => $v) {
    if(preg_match_all('#(^|\s|,)(\d+\.\d+)($|\s|,)#ui', $v, $matches)) {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО'. '<br>';
        echo 'Дробные числа: '. implode(",",$matches[2]);
    }else {
        echo 'В такой строке: '.htmlspecialchars($array[$k]).' регулярка не прошла.' . '<br>';
    }
}



$array = array(
	'site.ru',
	'barakuda',
	'zimbabwe_ru',
	'zimbabwe',
	'zzz-zimbabwe',
	'http://site.ru',
	'www.site.com',
	'www.zimbabwe.com',
	'zimbabwe.com.ua',
	'http://zimbabwe.ru',
);

$q = array(
	'Получить ссылки на реальные сайты (обязательно доменное имя), где имя сайта zimbabwe',
	'Немного сложная работа со строкой. Осуществить проверку каждого слова на присутствие в начале http://, и там, где его нет - дописать.
	 Для этих целей используем обход цикла foreach, и проверку preg_match. Не забываем про экранизацию при помощи preg_quote',
	'Похожее задание, но для сайтов, где не указано доменное имя - дописать .ru, это продолжение предыдущего задания, делается так же само, в одном цикле, просто 2 отдельных условия!',
);


foreach ($array as $k => $v) {
    if (preg_match_all('#('.preg_quote('http://').'|www\.)zimbabwe\.(com|com\.ua|ru|net|\.ua)#ui', $v, $matches)) {
        echo 'В этой строке сайт реальный: ' . htmlspecialchars($array[$k]) . ' регулярка прошла успешно'. '<br>';
    } else {
        echo 'Не реальный сайт: ' . htmlspecialchars($array[$k]) . ' регулярка не прошла'.  ' <br>';
    }
}

foreach ($array as $k => $v) {
    if (!preg_match('#^'.preg_quote('http://').'#ui', $v, $matches)){
        $k = preg_replace("#^#", "http://", $v);
        echo 'В этой строке : ' . htmlspecialchars($k) . ' регулярка прошла успешно'. '<br>';
        //echo '<pre>'.print_r($matches,1).'</pre>';
    } else {
        echo 'В этой строке : ' . htmlspecialchars($array[$k]) . ' замена не нужна'.  ' <br>';
    }
}

foreach ($array as $k => $v) {
    if (!preg_match('#(\.(com|com\.ua|ru))#ui', $v, $matches)){
        echo htmlspecialchars($array[$k]) . '.ru' . '<br>';
    }
}



$array = array(
	'inpost       ',
	'Barabulka_ru',
	'Zimbabwe.ru',
	'Max',
	'Yojik',
	'Иван Тарасов',
	'Ёжик',
	'Борис Николаевич Кощуновский',
	'Ооооооооооооооооооооочень длинное имя',
	'Я',
	'go->drink->die',
	'Don`t sleep',
	'<Пивасик',
	'1',
	'123456789',
	'77777',
	'7ф777я7',
);

$q = array(
	'Теперь идут операции по работе с логинами и паролями. Очень важно именно при РЕГИСТРАЦИИ:',
	'Проверка на preg_match, разрешить только числам. Подсказка: числа точно так же как и буквы, а именно 0-9 (а-я)',
	'Пропустить только строки, состоящие из цифр 7 и символов ф,я',
	'Пропустить только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов',
	'Выбрать логин, который начинается на M и заканчивается на x , я говорю про Max',
);


foreach ($array as $k => $v) {
    if (preg_match('#^[0-9]+$#ui', $v, $matches)) {
        echo 'В этой строке  ' . (int)$array[$k] . '  регулярка прошла УСПЕШНО <br>';
    }
}
foreach ($array as $k => $v) {
    if (preg_match('#^[7фя]+$#ui', $v, $matches)) {
        echo 'В этой строке  ' . htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО <br>';
    }
}

foreach ($array as $k => $v) {
    if (preg_match('#^[-_а-яёa-z\s]{4,15}$#ui', $v, $matches)) {
        echo 'В этой строке  ' . htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО <br>';
    }else{
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка не прошла <br>';
    }
}
foreach ($array as $k => $v) {
    if(preg_match('#^M.+x$#ui', $v, $matches)){
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО <br>';
    }else{
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка не прошла <br>';
    }
}


$array = array(
	'Я тебя ооооочеень            СИЛЬНО            ЛЮБЛЮ          МОЙ                    ДругБорис! Цёми-Цёми,    Пративный!',
);

$q = array(
	'Вчера писал для себя. Заменить подряд идущие пробелы на один. Чтобы не было их так много. preg_replace',
);
foreach ($array as $k => $v) {
    $result = preg_replace('#\s{2,}#ui',' ', $array);
    echo $result[0] .'<br>';
}

$array = array(
	'Дата публикации:27 августа 08:43. Был отличный год!',
);

$q = array(
	'Строку мы знаем, меняется лишь день,месяц,время. Необходимо достать:',
	'Время, когда опубликовали',
	'Полностью дату, а именно (27 августа 08:43), она может меняться!',
);

foreach ($array as $k => $v) {
    if(preg_match_all('#:([\d]+\s[а-яё]*\s[\d]+:[\d]+)#ui', $v, $matches)) {
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО <br>';
        echo 'Меняющаяся дата: ' . $matches[1][0] . '<br>';
    } else{
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка не прошла <br>';
    }
}

foreach ($array as $k => $v) {
    if(preg_match_all('#([\d]+:[\d]+)\.#ui', $v, $matches)) {
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО <br>';
        echo 'Время, когда опубликовали: '. $matches[1][0] . '<br>';
    }else{
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка не прошла <br>';
    }
}

$array = array(
	'<a href="file.php">Это ссылка, и тут было классно</a>',
	'<a    href     =       "file.php"     >Это ссылка, и тут было классно</a>',
	'<a    href=fil7e.php >Это ссылка, и тут было классно</a>',
	"<a    href='elkak.php' >Это ссылка, и тут было классно</a>",
);

$q = array(
	'Используем карманы, необходимо получить путь, куда ссылается и текст внутри тега!
	 Стоит обратить внимание на момент, где символ МОЖЕТ БЫТЬ, а может и не БЫТЬ',
);

foreach ($array as $k => $v) {
    if(preg_match('#^'.preg_quote('<a').'\s+href\s*=.*([\w]+\.[a-z]{3})\s*.*\>\s*([\w,\s*]+)'.preg_quote('</a>').'#uiU', $v, $matches)){
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО <br>';
        echo 'Путь файла: ' . $matches[1] . '<br>';
        echo 'Текст: ' . $matches[2]. '<br>';
    }else{
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка не прошла <br>';
    }
}

$array = array(
	'text@',
	'yandex@@mega.com',
	'beer@mail.com',
	"inpost.dp.ua",
	"inpostdpua@gmail.com",
);

$q = array(
	'Проверить на валидность е-мейла. Краткая информация (ВАЖНАЯ!), емеил состоит из набора символов маленьких. 
	 Присутствует в центре собака, слева имя ящика, которое может состоять из обычных символов англ И подчеркивания И тире.
	 Справа находятся домены, отделенные точками.',
);


foreach ($array as $k => $v) {
    if(preg_match('#^[-a-z_]+@[a-z]+\.[a-z]+$#u', $v, $matches)){
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО <br>';
    }else{
        echo 'В этой строке  ' .htmlspecialchars($array[$k]) . ' регулярка не прошла <br>';
    }
}
